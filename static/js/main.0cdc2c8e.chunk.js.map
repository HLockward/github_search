{"version":3,"sources":["shared/baseUrl.js","component/HeaderComponent.js","component/FooterComponent.js","component/SearchForm.js","component/LoadingComponent.js","component/DisplayRepositories.js","component/HomeComponent.js","component/BranchComponent.js","redux/actions/repositoryAction.js","redux/actions/actionTypes.js","redux/actions/repoBranchActions.js","redux/actions/organizationActions.js","component/MainComponent.js","redux/reducers/repositories.js","redux/reducers/branches.js","redux/reducers/organization.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["baseUrl","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isNavOpen","isModalOpen","toggleNav","bind","assertThisInitialized","setState","react_default","a","createElement","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","height","width","alt","Collapse","isOpen","navbar","Nav","NavItem","react_router_dom","to","Jumbotron","Component","Footer","required","val","length","maxLength","len","SearchForm","repositoriesSort","isStarSortAsc","repositoriesSortByFork","isForkSortAsc","e","repositoriesFilter","target","value","org","search","url","_ref","query","searchParams","URLSearchParams","set","toString","setParams","history","push","concat","getOrganization","lib","onSubmit","values","handleSubmit","FormGroup","InputGroup","text","model","id","name","placeholder","validators","minLength","InputGroupAddon","addonType","Button","color","show","messages","organization","row","Col","md","onStartBtnClick","active","onForkBtnClick","Label","for","Input","type","languageSelected","onChange","onSelectChange","language","map","key","Loading","DisplayRepositories","items","isLoading","errMess","LoadingComponent_Loading","login","item","Card","CardBody","CardTitle","repo","getBranches","pushHistory","CardSubtitle","forks","stargazers_count","CardText","description","public_repos","getMoreRepositories","actualPage","Home","component_SearchForm","repositories","component_DisplayRepositories","fetchMoreRepositories","DisplayBranches","commit","sha","BranchList","console","log","branches","Breadcrumb","BreadcrumbItem","BranchComponent_DisplayBranches","repositoriesLoading","addRepositories","payload","repositoriesFailed","errmess","moreRepositoriesLoading","addMoreRepositories","repositoriesSortStar","sortType","repositoriesSortFork","repositoriesFilterLanguage","filterLanguage","branchesLoading","addBranches","branchesFailed","organizationLoading","addOrganization","organizationFailed","getParams","location","get","repository","Main","_getParams","fetchOrganization","fetchRepositories","fetchBranches","nextProps","HeaderComponent","react_router","path","component","_this$props","HomeComponent","errorMessage","_this$props2","_getParams3","BranchComponent","FooterComponent","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","catch","filter","organizationName","page","Repositories","arguments","undefined","originalRepositories","action","objectSpread","toConsumableArray","Set","x","slice","sort","b","starA","starB","forks_count","r","Branches","Organization","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","es","MainComponent","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0cdc2c8e.chunk.js","sourcesContent":["export const baseUrl = 'https://api.github.com/';\nexport const HOME_URL = (process.env.NODE_ENV !== 'production' ? '/' : 'https://hlockward.github.io/confunsion/');","import React, {Component} from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport {HOME_URL} from '../shared/baseUrl';\n\nclass Header extends Component{\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n          };\n  \n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n    }\n    \n    render() {\n        return(\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href={HOME_URL}><img src='assets/images/icon.png' height=\"40\" width=\"45\" alt='git_search' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                                </NavItem>\n                            </Nav>  \n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-3\">\n                                <img src='assets/images/logo.png' height=\"150\" width=\"200\" alt='RD food' />\n                            </div>\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Github searcher</h1>\n                                <p>Find your list of Github projects in a organisation</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                \n            </div>\n        );\n    };\n};\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\"> \n                    <Link to=\"/home\">\n                        <img src='assets/images/logo.png' height=\"100\" width=\"150\" alt='git_search' />\n                    </Link>\n                </div>\n                <br/>\n                <div className=\"row justify-content-center\"> \n                    <Link to=\"/home\" className=\"text-light mr-3\">Home</Link>\n                </div>\n                <br/>\n                <div className=\"row justify-content-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google mr-3\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook mr-3\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin mr-3\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter mr-3\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google mr-3\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n                <br/>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <p>© Copyright 2019 Github searcher</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React, {Component} from 'react';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport { Button, FormGroup, InputGroupAddon, InputGroup,Col,Label,Input } from 'reactstrap';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nfunction setParams({ query }) {\r\n    const searchParams = new URLSearchParams();\r\n    searchParams.set(\"query\", query || \"\");\r\n    return searchParams.toString();\r\n  }\r\n\r\n\r\nclass SearchForm extends Component{\r\n\r\n\r\n    onStartBtnClick() {\r\n        this.props.repositoriesSort(!this.props.isStarSortAsc);\r\n    }\r\n\r\n    onForkBtnClick() {\r\n        this.props.repositoriesSortByFork(!this.props.isForkSortAsc);\r\n    }\r\n\r\n    onSelectChange(e){\r\n        this.props.repositoriesFilter(e.target.value);\r\n    }\r\n\r\n    handleSubmit(value){\r\n        const org = value.search;\r\n        const url = setParams({ query: org });\r\n        this.props.history.push(`?${url}`);\r\n        this.props.getOrganization(org);  \r\n        this.props.search(org); \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n               <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                <FormGroup>\r\n                    <br/>\r\n                    <InputGroup>\r\n                        <Control.text model=\".search\" id=\"search\" name=\"search\" \r\n                            className=\"form-control\" placeholder=\"Search your organization's project\"\r\n                            validators = {\r\n                                {\r\n                                    required,minLength: minLength(3), maxLength: maxLength(15)\r\n                                }\r\n                            }\r\n                        />\r\n                        \r\n                        <InputGroupAddon addonType=\"append\"><Button color=\"secondary\"><i className=\"fa fa-search\"></i></Button></InputGroupAddon>\r\n                    </InputGroup>\r\n                    <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".search\"\r\n                            show=\"touched\"\r\n                            messages={{\r\n                                required: 'Required ',\r\n                                minLength: 'Must be greater than 2 characters ',\r\n                                maxLength: 'Must be 15 characters or less '\r\n                            }} \r\n                        />\r\n                </FormGroup>  \r\n                {this.props.organization ? \r\n                    <FormGroup row>\r\n                        <Col md={2}>\r\n                            <Button color=\"warning\" onClick={() => this.onStartBtnClick()} active={this.props.isStarSortAsc}>\r\n                                <i className=\"fa fa-star fa-lg\"></i>\r\n                                {this.props.isStarSortAsc ? <i className=\"fa fa-arrow-down fa-lg\"></i> : <i className=\"fa fa-arrow-up fa-lg\"></i>}\r\n                            </Button>\r\n                        </Col>\r\n                        <Col md={2}>   \r\n                            <Button color=\"primary\" onClick={() => this.onForkBtnClick()} active={this.props.isForkSortAsc}>\r\n                                FORK {this.props.isForkSortAsc ? <i className=\"fa fa-arrow-down fa-lg\"></i> : <i className=\"fa fa-arrow-up fa-lg\"></i> }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <Label className=\"offset-md-2\" for=\"ddlLanguage\">Select Language:</Label>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Input type=\"select\" name=\"select\" id=\"ddlLanguage\" value={this.props.languageSelected} onChange={(e) => this.onSelectChange(e)}>\r\n                                <option>ALL</option>\r\n                                {this.props.language == null ? '' : this.props.language.map(language => <option key={language}>{language}</option>)}\r\n                            </Input>\r\n                        </Col>    \r\n                    </FormGroup>\r\n                :\r\n                ''\r\n                }\r\n            </LocalForm>\r\n            \r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { Card, CardText, CardBody,CardTitle, CardSubtitle, Button} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nconst DisplayRepositories = (props) => {\r\n    const {items, isLoading, errMess, org} = props;\r\n\r\n    const pushHistory = (org,repo) =>{\r\n        props.history.push(`?query=${org}&repo=${repo}`);\r\n        props.getBranches(org,repo);\r\n    }\r\n\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return( \r\n            \r\n            <div>\r\n                <h2>{`My organization: ${props.organization.login}`}</h2>\r\n                {items.map((item) => \r\n                    <Card key={item.id}>\r\n                        <CardBody>\r\n                        <CardTitle><Link onClick={() => pushHistory(org,item.name)} to={`/branches?query=${org}&repo=${item.name}`}>{item.name}</Link></CardTitle>\r\n                        <CardSubtitle>{`starts ${item.forks}`}</CardSubtitle>\r\n                        <CardSubtitle>{`forks ${item.stargazers_count}`}</CardSubtitle>\r\n                        <CardSubtitle>{`forks ${item.language}`}</CardSubtitle>\r\n                        <CardText>{item.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                )}\r\n                {items.length < props.organization.public_repos ? \r\n                <Button color=\"primary\" onClick={() => props.getMoreRepositories(org,props.actualPage + 1)}>\r\n                    Load more repositories\r\n                </Button>\r\n                :\r\n                ''\r\n                }\r\n            </div>\r\n        );\r\n    }       \r\n};\r\n\r\nexport default DisplayRepositories;","import React from 'react';\nimport SearchForm from './SearchForm';\nimport DisplayRepositories from './DisplayRepositories';\n\nfunction Home(props) {\n    const { query, history } = props;\n    return(\n        <div className=\"container\">\n            <SearchForm \n                repositoriesSort={props.repositoriesSort}\n                search={props.search}\n                getOrganization={props.getOrganization} \n                history={history} \n                query={query}\n                isStarSortAsc ={props.isStarSortAsc}\n                repositoriesFilter = {props.repositoriesFilter}\n                language = {props.language}\n                languageSelected = {props.languageSelected}\n                repositoriesSortByFork ={props.repositoriesSortByFork}\n                isForkSortAsc ={props.isForkSortAsc}\n                organization={props.organization}\n            />\n            {props.repositories == null ? '' : \n                <DisplayRepositories \n                    organization={props.organization} \n                    getBranches={props.getBranches} \n                    history={history} \n                    org={query} \n                    items={props.repositories} \n                    isLoading={props.isLoading} \n                    errMess={props.errMess}\n                    getMoreRepositories = {props.fetchMoreRepositories}\n                    actualPage={props.actualPage}\n                />\n            }\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport {Card, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,CardSubtitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\n\nconst DisplayBranches = (props) => {\n    const {items, isLoading, errMess} = props;\n\n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        return( \n            \n            <div>\n                {items.map((item) => \n                    <Card key={item.name}>\n                        <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        <CardSubtitle>{`sha: ${item.commit.sha}`}</CardSubtitle>\n                        <CardText>{`commit url: ${item.commit.url}`}</CardText>\n                        </CardBody>\n                    </Card>\n                )}\n            </div>\n        );\n    }       \n};\n\nconst BranchList = (props) =>{\n    console.log(props.branches);\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to={`/home?query=${props.query}`}>{props.query}</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.repo}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>{props.repo}</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"container\">\n                {props.branches == null ? '' : <DisplayBranches items={props.branches} isLoading={props.Loading} errMess={props.errMess} /> }\n            </div>\n        </div>\n    );  \n};\n\nexport default BranchList;","import * as ActionTypes from './actionTypes';\nimport { baseUrl } from '../../shared/baseUrl';\n\n/** repositories */\nexport const fetchRepositories = (organization) => (dispatch) => {\n    dispatch(repositoriesLoading(true));\n\n    return fetch(baseUrl +'orgs/'+ organization +'/repos?page=1&per_page=10')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }else{\n                var error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        }, error =>{\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(repositories => dispatch(addRepositories(repositories)))\n        .catch(error => dispatch(repositoriesFailed(error.message)));\n};\n\nexport const repositoriesLoading = () =>({\n    type: ActionTypes.REPOSITORIES_LOADING\n});\n\nexport const addRepositories = (repositories) =>({\n    type: ActionTypes.ADD_REPOSITORIES,\n    payload: repositories\n});\n\nexport const repositoriesFailed = (errmess) =>({\n    type: ActionTypes.REPOSITORIES_FAILED,\n    payload: errmess\n});\n\nexport const fetchMoreRepositories = (organization,page) => (dispatch) => {\n    dispatch(moreRepositoriesLoading(true));\n\n    return fetch(baseUrl +'orgs/'+ organization +'/repos?page=' +page+ '&per_page=10')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }else{\n                var error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        }, error =>{\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(repositories => dispatch(addMoreRepositories(repositories)))\n        .catch(error => dispatch(repositoriesFailed(error.message)));\n};\n\nexport const moreRepositoriesLoading = () =>({\n    type: ActionTypes.MORE_REPOSITORIES_LOADING\n});\n\nexport const addMoreRepositories = (repositories) =>({\n    type: ActionTypes.ADD_MORE_REPOSITORIES,\n    payload: repositories\n});\n\nexport const repositoriesSort = (sortType) => (dispatch) => {\n    dispatch(repositoriesSortStar(sortType));\n};\n\n\nexport const repositoriesSortStar = (sortType) =>({\n    type: ActionTypes.SORT_REPOSITORIES_STARS,\n    payload: sortType\n});\n\nexport const repositoriesSortByFork = (sortType) => (dispatch) => {\n    dispatch(repositoriesSortFork(sortType));\n};\n\n\nexport const repositoriesSortFork = (sortType) =>({\n    type: ActionTypes.SORT_REPOSITORIES_FORK,\n    payload: sortType\n});\n\nexport const repositoriesFilter = (filter) => (dispatch) => {\n    dispatch(repositoriesFilterLanguage(filter));\n};\n\n\nexport const repositoriesFilterLanguage = (filterLanguage) =>({\n    type: ActionTypes.FILTER_REPOSITORIES_LANGUAGE,\n    payload: filterLanguage\n});","export const REPOSITORIES_LOADING = 'REPOSITORIES_LOADING';\nexport const REPOSITORIES_FAILED = 'REPOSITORIES_FAILED';\nexport const ADD_REPOSITORIES = 'ADD_REPOSITORIES';\nexport const ADD_MORE_REPOSITORIES = 'ADD_MORE_REPOSITORIES';\nexport const MORE_REPOSITORIES_LOADING = 'MORE_REPOSITORIES_LOADING';\nexport const SORT_REPOSITORIES_STARS = 'SORT_REPOSITORIES_STARS';\nexport const SORT_REPOSITORIES_FORK = 'SORT_REPOSITORIES_FORK';\nexport const FILTER_REPOSITORIES_LANGUAGE = 'FILTER_REPOSITORIES_LANGUAGE';\n\nexport const REPOSITORY_BRANCHES_LOADING = 'REPOSITORY_BRANCHES_LOADING';\nexport const REPOSITORY_BRANCHES_FAILED = 'REPOSITORY_BRANCHES_FAILED';\nexport const ADD_REPOSITORY_BRANCHES = 'ADD_REPOSITORY_BRANCHES';\n\nexport const ORGANIZATION_LOADING = 'ORGANIZATION_LOADING';\nexport const ORGANIZATION_FAILED = 'ORGANIZATION_FAILED';\nexport const ADD_ORGANIZATION = 'ADD_ORGANIZATION';","import * as ActionTypes from './actionTypes';\nimport { baseUrl } from '../../shared/baseUrl';\n\nexport const fetchBranches = (organization,repository) => (dispatch) => {\n    dispatch(branchesLoading(true));\n\n    return fetch(`${baseUrl}repos/${organization}/${repository}/branches`)\n        .then(response => {\n            if(response.ok){\n                return response;\n            }else{\n                var error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        }, error =>{\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(branches => dispatch(addBranches(branches)))\n        .catch(error => dispatch(branchesFailed(error.message)));\n};\n\nexport const branchesLoading = () =>({\n    type: ActionTypes.REPOSITORY_BRANCHES_LOADING\n});\n\nexport const addBranches = (branches) =>({\n    type: ActionTypes.ADD_REPOSITORY_BRANCHES,\n    payload: branches\n});\n\nexport const branchesFailed = (errmess) =>({\n    type: ActionTypes.REPOSITORY_BRANCHES_FAILED,\n    payload: errmess\n});\n","import * as ActionTypes from './actionTypes';\r\nimport { baseUrl } from '../../shared/baseUrl';\r\n\r\nexport const fetchOrganization = (organizationName) => (dispatch) => {\r\n    dispatch(organizationLoading(true));\r\n\r\n    return fetch(baseUrl +'orgs/'+ organizationName)\r\n        .then(response => {\r\n            if(response.ok){\r\n                return response;\r\n            }else{\r\n                var error = new Error(`Error ${response.status}: ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error =>{\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(organization => dispatch(addOrganization(organization)))\r\n        .catch(error => dispatch(organizationFailed(error.message)));\r\n};\r\n\r\nexport const organizationLoading = () =>({\r\n    type: ActionTypes.ORGANIZATION_LOADING\r\n});\r\n\r\nexport const addOrganization = (repositories) =>({\r\n    type: ActionTypes.ADD_ORGANIZATION,\r\n    payload: repositories\r\n});\r\n\r\nexport const organizationFailed = (errmess) =>({\r\n    type: ActionTypes.ORGANIZATION_FAILED,\r\n    payload: errmess\r\n});\r\n","import React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport BranchList from './BranchComponent';\nimport {fetchRepositories, repositoriesSort,repositoriesSortByFork, repositoriesFilter, fetchMoreRepositories} from '../redux/actions/repositoryAction';\nimport {fetchBranches} from '../redux/actions/repoBranchActions';\nimport {fetchOrganization} from '../redux/actions/organizationActions';\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state =>{\n    return{\n        repositories : state.repositories,\n        branches : state.branches,\n        organization : state.organization\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchRepositories: (organization) => {dispatch(fetchRepositories(organization))},\n    repositoriesSort: (sortType) => {dispatch(repositoriesSort(sortType))},\n    repositoriesFilter: (filter) => {dispatch(repositoriesFilter(filter))},\n    repositoriesSortByFork: (sortType) => {dispatch(repositoriesSortByFork(sortType))},\n    fetchBranches: (org, repo) => {dispatch(fetchBranches(org, repo))},\n    fetchOrganization: (org) => {dispatch(fetchOrganization(org))},\n    fetchMoreRepositories: (org,page) => {dispatch(fetchMoreRepositories(org,page))}\n});\n\n\nfunction getParams(location) {\n    const searchParams = new URLSearchParams(location.search);\n    return {\n      query: searchParams.get(\"query\") || \"\",\n      repository: searchParams.get(\"repo\") || \"\"\n    };\n}\n  \nclass Main extends Component {  \n\n    componentDidMount() {\n        const { location} = this.props;\n        const { query, repository } = getParams(location);\n        if(query){\n            this.props.fetchOrganization(query);\n            this.props.fetchRepositories(query);\n        }\n        console.log(repository);\n        if(repository){\n            this.props.fetchBranches(query, repository);\n        }\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.query !== this.props.query) {\n            this.props.fetchOrganization(nextProps.query);\n            this.props.fetchRepositories(nextProps.query);\n        }\n        if (nextProps.query !== this.props.query || nextProps.repository !== this.props.repository) {\n            this.props.fetchBranches(this.props.query, this.props.repository);\n        }\n    }\n\n    render() {\n\n        const HomePage = () => {\n            const {history, location} = this.props;\n            const { query } = getParams(location);\n            return(\n                <Home \n                search = {this.props.fetchRepositories}\n                getOrganization = {this.props.fetchOrganization}\n                organization = {this.props.organization.organization}\n                repositories = {this.props.repositories.repositories}\n                isLoading={this.props.repositories.isLoading}\n                errMess={this.props.repositories.errorMessage}\n                history={history}\n                query={query}\n                repositoriesSort = {this.props.repositoriesSort}\n                repositoriesSortByFork = {this.props.repositoriesSortByFork}\n                isStarSortAsc = {this.props.repositories.isStarSortAsc}\n                isForkSortAsc = {this.props.repositories.isForkSortAsc}\n                language = {this.props.repositories.language}\n                repositoriesFilter = {this.props.repositoriesFilter}\n                languageSelected = {this.props.repositories.languageSelected}\n                getBranches = {this.props.fetchBranches}\n                fetchMoreRepositories = {this.props.fetchMoreRepositories}\n                actualPage = {this.props.repositories.actualPage}\n                />\n            );\n        }\n\n        const BranchPage = () => {\n            const {history, location} = this.props;\n            const { query, repository } = getParams(location);\n            return(\n                <BranchList \n                    history={history}\n                    query={query}\n                    repo={repository}\n                    branches = {this.props.branches.branches}\n                    isLoading={this.props.branches.isLoading}\n                    errMess={this.props.branches.errorMessage}\n                />\n            );\n        }\n\n        return (\n            <div className=\"App\">\n                <Header />\n                    <Switch>\n                        <Route path='/home' component={HomePage} />\n                        <Route path='/branches' component={BranchPage} />\n                        <Redirect to=\"/home\" />\n                    </Switch>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n","import * as actionTypes from '../actions/actionTypes';\n\nexport const Repositories = (\nstate = {\n    isLoading : true, \n    errorMessage : null, \n    repositories : null,\n    isStarSortAsc : false,\n    isForkSortAsc : false,\n    language : [],\n    originalRepositories : null,\n    languageSelected : 'ALL',\n    actualPage: 0\n}, \naction) => {\n    switch (action.type) {\n        case actionTypes.ADD_REPOSITORIES:\n            return {...state, isLoading : false, errorMessage : null, isStarSortAsc : false, isForkSortAsc : false, repositories: action.payload,\n                originalRepositories: action.payload, actualPage: 1,\n                language: [...new Set(action.payload.map(x => x.language))]};\n        \n                case actionTypes.ADD_MORE_REPOSITORIES:\n                return {...state, isLoading : false, errorMessage : null, repositories:[].concat(state.repositories, action.payload) ,\n                    originalRepositories:[].concat(state.originalRepositories, action.payload), actualPage: state.actualPage + 1,\n                    language: [ ...new Set([...state.language , ...new Set(action.payload.map(x => x.language))]) ]\n                };\n                \n        case actionTypes.REPOSITORIES_LOADING:\n            return {...state, isLoading : true, errorMessage : null, isStarSortAsc : false,  repositories: []};\n            \n        case actionTypes.MORE_REPOSITORIES_LOADING:\n            return {...state, isLoading : true, errorMessage : null, isStarSortAsc : false };\n            \n        case actionTypes.REPOSITORIES_FAILED:\n            return {...state, isLoading : false, errorMessage : action.payload, isStarSortAsc : false};\n\n        case actionTypes.SORT_REPOSITORIES_STARS:\n            return {...state, isLoading : false, errorMessage : null, isStarSortAsc : action.payload, \n                repositories: state.repositories.slice().sort(function(a, b) {\n                    var starA = a.stargazers_count,\n                        starB = b.stargazers_count\n                    if(action.payload){\n                        if (starA < starB)\n                            return -1\n                        if (starA > starB)\n                            return 1\n                        return 0\n                    }else{\n                        if (starA > starB)\n                            return -1\n                        if (starA < starB)\n                            return 1\n                        return 0\n                    }\n                    \n                })\n            };\n        case actionTypes.SORT_REPOSITORIES_FORK:\n            return {...state, isLoading : false, errorMessage : null, isForkSortAsc : action.payload, \n                repositories: state.repositories.slice().sort(function(a, b) {\n                    var starA = a.forks_count,\n                        starB = b.forks_count;\n                    if(action.payload){\n                        if (starA < starB)\n                            return -1\n                        if (starA > starB)\n                            return 1\n                        return 0\n                    }else{\n                        if (starA > starB)\n                            return -1\n                        if (starA < starB)\n                            return 1\n                    return 0\n                }\n                    \n            })\n        };\n        case actionTypes.FILTER_REPOSITORIES_LANGUAGE:\n            return {...state, isLoading : false, errorMessage : null, languageSelected : action.payload,\n                repositories: action.payload === 'ALL' ? state.originalRepositories : state.originalRepositories.filter(r => r.language === action.payload)\n            };    \n        default:\n          return state;\n      }\n};\n","import * as actionTypes from '../actions/actionTypes';\n\nexport const Branches = (\nstate = {\n    isLoading : true, \n    errorMessage : null, \n    branches : null\n}, \naction) => {\n    switch (action.type) {\n        case actionTypes.ADD_REPOSITORY_BRANCHES:\n            return {...state, isLoading : false, errorMessage : null, branches: action.payload};\n\n        case actionTypes.REPOSITORY_BRANCHES_LOADING:\n            return {...state, isLoading : true, errorMessage : null, branches: []};\n            \n        case actionTypes.REPOSITORY_BRANCHES_FAILED:\n            return {...state, isLoading : false, errorMessage : action.payload};\n\n        default:\n          return state;\n      }\n};\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nexport const Organization = (\r\nstate = {\r\n    isLoading : true, \r\n    errorMessage : null, \r\n    organization : null\r\n}, \r\naction) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_ORGANIZATION:\r\n            return {...state, isLoading : false, errorMessage : null, organization: action.payload};\r\n\r\n        case actionTypes.ORGANIZATION_LOADING:\r\n            return {...state, isLoading : true, errorMessage : null, organization: {}};\r\n            \r\n        case actionTypes.ORGANIZATION_FAILED:\r\n            return {...state, isLoading : false, errorMessage : action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport { HashRouter } from 'react-router-dom';\nimport Main from './component/MainComponent';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { Repositories } from './reducers/repositories';\nimport { Branches } from './reducers/branches';\nimport {Organization} from './reducers/organization';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\n\nexport const ConfigureStore = () =>{\n    const store = createStore(\n        combineReducers({\n            repositories: Repositories,\n            branches: Branches,\n            organization : Organization\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}